name: CI build

on:
  push:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning'
      tags:
        description: 'Test scenario tags'  

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        version:
          - 5.15.2
          
        platform:
          # - gcc_64
          # - android
          # - msvc2019
          - msvc2019_64
          # - mingw81_32
          # - clang_64
          # - mingw81_64

        include:
#           - platform: gcc_64
#             os: ubuntu-latest
#           - platform: android
#             os: ubuntu-latest
#           - platform: msvc2019
#             os: windows-latest
#           - platform: mingw81_32
#             os: windows-latest
#             ver: win32_mingw81
#           - platform: mingw81_64
#             os: windows-latest
#             arch: win64_mingw81
#             spec: win32-mingw
          - platform: msvc2019_64
            os: windows-latest
            spec: win32-msvc
            arch: win64_msvc2019_64
            
    runs-on: ${{matrix.os}}
    steps:
      - name: checkout
        uses: actions/checkout@v1
        with:
          submodules: recursive
      # - uses: actions/setup-python@v2.2.2
      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: ${{ matrix.os }}-QtCache 

      - name: Install Qt
        uses: jurplel/install-qt-action@v2.13.2
        with:
          version: '${{ matrix.version }}'
          arch:    '${{ env.arch }}'
          extra:   '--external 7z'
          tools:   'tools_ifw,4.1.0,qt.tools.ifw.41 tools_qtcreator,4.14.2-0,qt.tools.qtcreator'
          setup-python: 'true'
          cached:  ${{ steps.cache-qt.outputs.cache-hit }}
          # tools-only: 'true'
      - run: ls ../Qt
          
      # - name: dirvs
      #   run: |
      #     $dname=dir -Name "c:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC"
      #     echo ::set-output name=ver::$dname
      # - name: setPath
      #   run: |
      #     set path=%path%;%qtdir%\bin;"C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\${{steps.dirvs.outputs.ver}}\bin\Hostx64\x64"
      #     set QMakeSpec=${{matrix.spec}}

      - name: add cl.exe
        uses: ilammy/msvc-dev-cmd@v1

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        
      - name: build
        run: qmake "CONFIG+=qtquickcompiler"

      # - run: set path=%path%;"D:\a\github-action-test\Qt\Tools\QtCreator\bin";
      # - run: jom.exe -f qmake_all && jom.exe
      # - name: upload module to releases
      #   uses: Skycoder42/action-upload-release@master
      #   with:
      #     repo_token: ${{secrets.GITHUB_TOKEN}}
      #     platform: ${{matrix.platform}}
      #     asset_name: test-${{matrix.platform}}-${{matrix.version}}
      #     tag: 'v0.0.1'
      #     overwrite: true 
#   deploy:
#     if: startsWith(github.ref, 'refs/tags/')
#     needs: build
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v1
#         with:
#           submodules: recursive
#           path: source
#       - uses: actions/setup-python@v1
#       - uses: Skycoder42/action-deploy-qt@master
#         with:
#           token: ${{secrets.GITHUB_TOKEN}}
#           version: 5.15.2
#           host: ${{secrets.SSHFS_HOST}}
#           key: ${{secrets.SSHFS_KEY}}
#           port: ${{secrets.SSHFS_PORT}} 
