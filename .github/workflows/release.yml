name: CI build

on:
  push:
#     tags:
#       - 'v*.*.*'
# ------------ enable manual rerun ----------------
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
#         required: true
        default: 'warning'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        version:
          - 5.15.2
          
        platform:
#          - gcc_64
#          - android
#          - msvc2019
#          - msvc2019_64
#          - mingw81_32
#          - clang_64
          - mingw81_64

        include:
#          - platform: gcc_64
#            os: ubuntu-latest
#          - platform: android
#            os: ubuntu-latest
#          - platform: msvc2019
#            os: windows-latest
#          - platform: mingw81_32
#            os: windows-latest
#            ver: win32_mingw81
#          - platform: msvc2019_64
#            os: windows-latest
#            arch: win64_msvc2019_64
          - platform: mingw81_64
            os: windows-latest
            arch: win64_mingw81
            
    runs-on: ${{matrix.os}}
    steps:
      - name: checkout
        uses: actions/checkout@v1
        with:
          submodules: recursive
#      - uses: actions/setup-python@v2.2.2
#      - name: Cache Qt
#        id: cache-qt
#        uses: actions/cache@v1
#        with:
#          path: ../Qt
#          key: ${{ matrix.os }}-QtCache 

      - name: Install Qt
        uses: jurplel/install-qt-action@v2.13.2
        with:
          version: '${{ matrix.version }}'
          arch:    '${{ matrix.arch }}'
          extra:   '--external 7z'
          tools:   'tools_ifw,4.1.0,qt.tools.ifw.41 tools_qtcreator,4.14.2-0,qt.tools.qtcreator'
          setup-python: 'true'
#          cached:  ${{ steps.cache-qt.outputs.cache-hit }}
          
      - name: add cl.exe
        if: contains( ${{ matrix.platform }} , 'windows')
        uses: ilammy/msvc-dev-cmd@v1

      - name: qmake
        run: qmake github-action-test.pro "CONFIG+=qtquickcompiler" 

# ------------ windows mingw64 make & deploy ----------------
      - name: make
        if: contains( ${{ matrix.os }} , 'mingw')
        run: | 
          mingw32-make.exe qmake_all
          mingw32-make.exe
          mkdir deploy && mv github-action-test.exe deploy && cd deploy 
          windeployqt.exe --qmldir  $Qt5_Dir/qml github-action-test.exe
          zip github-action-test.zip *          

# ------------ Upload to releases ----------------
      - name: Upload to releases
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{github.workspace}}/deploy/github-action-test.zip
          asset_name: github-action-test-${{ matrix.platform }} #-${{ github.ref }}
          tag: v0.0.1 # ${{ github.ref }}
# ------------ debug workflow using ssh ----------------
#       - name: Setup tmate session
#         uses: mxschmitt/action-tmate@v3